{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Awesome Medical Imaging Datasets (AMID) - a curated list of medical imaging datasets with unified interfaces Getting started Just import a dataset and start using it! Note that for some datasets you must manually download the raw files first. from amid.verse import VerSe ds = VerSe() # get the available ids print(len(ds.ids)) i = ds.ids[0] # use the available methods: # load the image and vertebrae masks x, y = ds.image(i), ds.masks(i) print(ds.split(i), ds.patient(i)) # or get a namedTuple-like object: entry = ds(i) x, y = entry.image, entry.masks print(entry.split, entry.patient) Install Just get it from PyPi: pip install amid Or if you want to use version control features: git clone https://github.com/neuro-ml/amid.git cd amid && pip install -e .","title":"Home"},{"location":"#getting-started","text":"Just import a dataset and start using it! Note that for some datasets you must manually download the raw files first. from amid.verse import VerSe ds = VerSe() # get the available ids print(len(ds.ids)) i = ds.ids[0] # use the available methods: # load the image and vertebrae masks x, y = ds.image(i), ds.masks(i) print(ds.split(i), ds.patient(i)) # or get a namedTuple-like object: entry = ds(i) x, y = entry.image, entry.masks print(entry.split, entry.patient)","title":"Getting started"},{"location":"#install","text":"Just get it from PyPi: pip install amid Or if you want to use version control features: git clone https://github.com/neuro-ml/amid.git cd amid && pip install -e .","title":"Install"},{"location":"datasets/","text":"Datasets amid.verse.VerSe A Vertebral Segmentation Dataset with Fracture Grading [1]_ The dataset was used in the MICCAI-2019 and MICCAI-2020 Vertebrae Segmentation Challenges. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required Notes Download links: 2019: https://osf.io/jtfa5/ 2020: https://osf.io/4skx2/ Examples: >>> # Place the downloaded archives in any folder and pass the path to the constructor: >>> ds = VerSe ( root = '/path/to/archives/root' ) >>> print ( len ( ds . ids )) # 374 >>> print ( ds . image ( ds . ids [ 0 ]) . shape ) # (512, 512, 214) References .. [1] L\u00f6ffler MT, Sekuboyina A, Jacob A, et al. A Vertebral Segmentation Dataset with Fracture Grading. Radiol Artif Intell. 2020;2(4):e190138. Published 2020 Jul 29. doi:10.1148/ryai.2020190138 ids () image ( id : str ) affine ( id : str ) The 4x4 matrix that gives the image's spatial orientation split ( id : str ) The split in which this entry is contained: training, validate, test patient ( id : str ) The unique patient id year ( id : str ) The year in which this entry was published: 2019, 2020 centers ( id : str ) Vertebrae centers in format {label: [x, y, z]} masks ( id : str ) -> Union [ np . ndarray , None ] Vertebrae masks amid.cancer_500.MoscowCancer500 The Moscow Radiology Cancer-500 dataset. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded files. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required Notes Download links: https://mosmed.ai/en/datasets/ct_lungcancer_500/ Examples: >>> # Place the downloaded files in any folder and pass the path to the constructor: >>> ds = MoscowCancer500 ( root = '/path/to/files/root' ) >>> print ( len ( ds . ids )) # 979 >>> print ( ds . image ( ds . ids [ 0 ]) . shape ) # (512, 512, 67) ids () image ( id : str ) study_uid ( id : str ) series_uid ( id : str ) sop_uids ( id : str ) pixel_spacing ( id : str ) slice_locations ( id : str ) orientation_matrix ( id : str ) instance_numbers ( id : str ) conv_kernel ( id : str ) kvp ( id : str ) patient_id ( id : str ) study_date ( id : str ) accession_number ( id : str ) nodules ( id : str ) amid.covid_1110.MoscowCovid1110 The Moscow Radiology COVID-19 dataset. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded files. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required Notes Download links: https://mosmed.ai/en/datasets/covid191110/ Examples: >>> # Place the downloaded files in any folder and pass the path to the constructor: >>> ds = MoscowCovid1110 ( root = '/path/to/files/root' ) >>> print ( len ( ds . ids )) # 1110 >>> print ( ds . image ( ds . ids [ 0 ]) . shape ) # (512, 512, 43) ids () image ( id : str ) affine ( id : str ) label ( id : str ) mask ( id : str )","title":"Datasets"},{"location":"datasets/#datasets","text":"","title":"Datasets"},{"location":"datasets/#amid.verse.VerSe","text":"A Vertebral Segmentation Dataset with Fracture Grading [1]_ The dataset was used in the MICCAI-2019 and MICCAI-2020 Vertebrae Segmentation Challenges. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded archives. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required","title":"VerSe"},{"location":"datasets/#amid.verse.VerSe--notes","text":"Download links: 2019: https://osf.io/jtfa5/ 2020: https://osf.io/4skx2/ Examples: >>> # Place the downloaded archives in any folder and pass the path to the constructor: >>> ds = VerSe ( root = '/path/to/archives/root' ) >>> print ( len ( ds . ids )) # 374 >>> print ( ds . image ( ds . ids [ 0 ]) . shape ) # (512, 512, 214)","title":"Notes"},{"location":"datasets/#amid.verse.VerSe--references","text":".. [1] L\u00f6ffler MT, Sekuboyina A, Jacob A, et al. A Vertebral Segmentation Dataset with Fracture Grading. Radiol Artif Intell. 2020;2(4):e190138. Published 2020 Jul 29. doi:10.1148/ryai.2020190138","title":"References"},{"location":"datasets/#amid.verse.VerSe.ids","text":"","title":"ids()"},{"location":"datasets/#amid.verse.VerSe.image","text":"","title":"image()"},{"location":"datasets/#amid.verse.VerSe.affine","text":"The 4x4 matrix that gives the image's spatial orientation","title":"affine()"},{"location":"datasets/#amid.verse.VerSe.split","text":"The split in which this entry is contained: training, validate, test","title":"split()"},{"location":"datasets/#amid.verse.VerSe.patient","text":"The unique patient id","title":"patient()"},{"location":"datasets/#amid.verse.VerSe.year","text":"The year in which this entry was published: 2019, 2020","title":"year()"},{"location":"datasets/#amid.verse.VerSe.centers","text":"Vertebrae centers in format {label: [x, y, z]}","title":"centers()"},{"location":"datasets/#amid.verse.VerSe.masks","text":"Vertebrae masks","title":"masks()"},{"location":"datasets/#amid.cancer_500.MoscowCancer500","text":"The Moscow Radiology Cancer-500 dataset. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded files. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required","title":"MoscowCancer500"},{"location":"datasets/#amid.cancer_500.MoscowCancer500--notes","text":"Download links: https://mosmed.ai/en/datasets/ct_lungcancer_500/ Examples: >>> # Place the downloaded files in any folder and pass the path to the constructor: >>> ds = MoscowCancer500 ( root = '/path/to/files/root' ) >>> print ( len ( ds . ids )) # 979 >>> print ( ds . image ( ds . ids [ 0 ]) . shape ) # (512, 512, 67)","title":"Notes"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.ids","text":"","title":"ids()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.image","text":"","title":"image()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.study_uid","text":"","title":"study_uid()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.series_uid","text":"","title":"series_uid()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.sop_uids","text":"","title":"sop_uids()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.pixel_spacing","text":"","title":"pixel_spacing()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.slice_locations","text":"","title":"slice_locations()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.orientation_matrix","text":"","title":"orientation_matrix()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.instance_numbers","text":"","title":"instance_numbers()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.conv_kernel","text":"","title":"conv_kernel()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.kvp","text":"","title":"kvp()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.patient_id","text":"","title":"patient_id()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.study_date","text":"","title":"study_date()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.accession_number","text":"","title":"accession_number()"},{"location":"datasets/#amid.cancer_500.dataset.MoscowCancer500.nodules","text":"","title":"nodules()"},{"location":"datasets/#amid.covid_1110.MoscowCovid1110","text":"The Moscow Radiology COVID-19 dataset. Parameters: Name Type Description Default root str , Path , optional path to the folder containing the raw downloaded files. If not provided, the cache is assumed to be already populated. required version str , optional the data version. Only has effect if the library was installed from a cloned git repository. required","title":"MoscowCovid1110"},{"location":"datasets/#amid.covid_1110.MoscowCovid1110--notes","text":"Download links: https://mosmed.ai/en/datasets/covid191110/ Examples: >>> # Place the downloaded files in any folder and pass the path to the constructor: >>> ds = MoscowCovid1110 ( root = '/path/to/files/root' ) >>> print ( len ( ds . ids )) # 1110 >>> print ( ds . image ( ds . ids [ 0 ]) . shape ) # (512, 512, 43)","title":"Notes"},{"location":"datasets/#amid.covid_1110.MoscowCovid1110.ids","text":"","title":"ids()"},{"location":"datasets/#amid.covid_1110.MoscowCovid1110.image","text":"","title":"image()"},{"location":"datasets/#amid.covid_1110.MoscowCovid1110.affine","text":"","title":"affine()"},{"location":"datasets/#amid.covid_1110.MoscowCovid1110.label","text":"","title":"label()"},{"location":"datasets/#amid.covid_1110.MoscowCovid1110.mask","text":"","title":"mask()"}]}